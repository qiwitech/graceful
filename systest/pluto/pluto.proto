syntax = "proto3";

package pluto;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";


service Processing {

  // Group Gate

  rpc Transfer(TransferRequest) returns (TransferResponse) {}

  rpc UpdateSettings(UpdateSettingsRequest) returns (UpdateSettingsResponse) {}

}


// Group History

service Storage {

  rpc GetPrevHash(PrevHashRequest) returns (PrevHashResponse) {}

  rpc GetHistory(HistoryRequest) returns (HistoryResponse) {}

  // Group System

  rpc GetStats(StatsRequest) returns (StatsResponse) {}

  rpc GetAccounts(AccountsRequest) returns (AccountsResponse) {}

  // Group Account

  rpc GetAccountSettings(AccountSettingsRequest)
      returns (AccountSettingsResponse) {}
}

// Last account state

message ActualState {
  int64 account = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
  int64 balance = 2;
  string last_hash = 3
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
  int64 last_op_time_ns = 4;
  string trace_id = 5;
}


// Error message

message ErrorResponse {
  string error = 1;
  enum ErrorType {
    GENERAL = 0;
    BALANCE = 1;
    POLICY = 2;
  }
  ErrorType error_type = 2;
}


// rpc Transfer (TransferRequest) returns (TransferResponse)

message TransferOK {
  int64 settings_id = 1;
  int64 last_batch_id = 2;
}

message Batch {
  int64 receiver = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
  int64 amount = 2;
}

message TransferRequest {
  int64 sender = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
  int64 created_at = 2;
  string prev_hash = 3
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
  int64 settings_id = 4;
  repeated Batch batch = 5;
  string sign = 6;
}

message TransferResponse {
  ActualState state = 1;
  TransferOK result = 2;
  ErrorResponse error = 3;
}

// rpc GetAccountSettings (AccountSettingsRequest) returns
// (AccountSettingsResponse)

message Limit {
  int64 duration = 1;
  int64 limit = 2;
}

message Setting {
  int64 id = 1;
  string prev_hash = 2
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
  repeated Limit limits = 3;
}

message AccountSettingsRequest {
  int64 account = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
}

message AccountSettingsResponse {
  ActualState state = 1;
  repeated Setting settings = 2;
}

// rpc UpdateSettings (UpdateSettingsRequest) returns (UpdateSettingsResponse)

message UpdateSettingsRequest {
  int64 account = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
  string prev_hash = 2
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
  int64 created_at = 3;
  repeated Limit limits = 4;
  bool verify_transfer_sign = 5;
  bool verify_setting_change_sign = 6;
  string public_key = 7;
  string sign = 8;
}

message UpdateSettingsResponse {
  ActualState state = 1;
  UpdateSettingsOK result = 2;
  ErrorResponse error = 3;
}

message UpdateSettingsOK {
  int64 last_settings_id = 1;
  string last_settings_hash = 2
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
}

// rpc GetPrevHash (PrevHashRequest) returns (PrevHashResponse)

message PrevHashRequest {
  int64 account = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
}

message PrevHashResponse {
  ActualState state = 1;
  int64 settings_id = 2;
}

// rpc GetHistory (HistoryRequest) returns (HistoryResponse)

message HistoryRequest {
  int64 account = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
  enum Direction {
    BOTH = 0;
    OUTPUT = 1;
    INPUT = 2;
  }
  Direction direction = 2;
  int32 page_size = 4;
  string page_token = 3;
}

message HistoryResponse {
  ActualState state = 1;
  repeated Txn transactions = 2;
  string next_page_token = 3;
}

message Txn {
  int64 id = 1;
  int64 batch_id = 2;
  int64 sender = 3;
  int64 receiver = 4;
  int64 amount = 5;
  int64 balance = 6;
  string prev_hash = 7
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
  int64 last_receiver_id = 8;
  string inputs_hash = 9
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
  int64 confirmed_by = 10
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
  int64 created_at = 11;
  int64 processed_at = 12;
  string hash = 13
      [ (gogoproto.customtype) = "Hash", (gogoproto.nullable) = false ];
  int64 settings_id = 14;
  string sign = 15;
}

// rpc GetStats (StatsRequest) returns (StatsResponse)

message StatsRequest {
  int64 account = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
}

message StatsResponse {
  ActualState state = 1;
  int64 emitter_balance = 2;
  int64 outputs = 3;
  int64 inputs = 4;
  int64 settings = 5;
}

// rpc GetAccounts (AccountsRequest) returns (AccountsResponse)

message AccountsRequest {
  int64 account = 1
      [ (gogoproto.customtype) = "Account", (gogoproto.nullable) = false ];
}

message AccountsResponse {
  repeated int64 accounts = 1 [ (gogoproto.customtype) = "Account" ];
  string next_page_token = 2;
  int64 total_time_ns = 3;
  string trace_id = 4;
}
