// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./systest/pluto/pluto.httpgw.go

package pluto

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
)

// Mock of ProcessingInterface interface
type MockProcessingInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockProcessingInterfaceRecorder
}

// Recorder for MockProcessingInterface (not exported)
type _MockProcessingInterfaceRecorder struct {
	mock *MockProcessingInterface
}

func NewMockProcessingInterface(ctrl *gomock.Controller) *MockProcessingInterface {
	mock := &MockProcessingInterface{ctrl: ctrl}
	mock.recorder = &_MockProcessingInterfaceRecorder{mock}
	return mock
}

func (_m *MockProcessingInterface) EXPECT() *_MockProcessingInterfaceRecorder {
	return _m.recorder
}

func (_m *MockProcessingInterface) Transfer(_param0 context.Context, _param1 *TransferRequest) (*TransferResponse, error) {
	ret := _m.ctrl.Call(_m, "Transfer", _param0, _param1)
	ret0, _ := ret[0].(*TransferResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProcessingInterfaceRecorder) Transfer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Transfer", arg0, arg1)
}

func (_m *MockProcessingInterface) UpdateSettings(_param0 context.Context, _param1 *UpdateSettingsRequest) (*UpdateSettingsResponse, error) {
	ret := _m.ctrl.Call(_m, "UpdateSettings", _param0, _param1)
	ret0, _ := ret[0].(*UpdateSettingsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProcessingInterfaceRecorder) UpdateSettings(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateSettings", arg0, arg1)
}

// Mock of StorageInterface interface
type MockStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockStorageInterfaceRecorder
}

// Recorder for MockStorageInterface (not exported)
type _MockStorageInterfaceRecorder struct {
	mock *MockStorageInterface
}

func NewMockStorageInterface(ctrl *gomock.Controller) *MockStorageInterface {
	mock := &MockStorageInterface{ctrl: ctrl}
	mock.recorder = &_MockStorageInterfaceRecorder{mock}
	return mock
}

func (_m *MockStorageInterface) EXPECT() *_MockStorageInterfaceRecorder {
	return _m.recorder
}

func (_m *MockStorageInterface) GetPrevHash(_param0 context.Context, _param1 *PrevHashRequest) (*PrevHashResponse, error) {
	ret := _m.ctrl.Call(_m, "GetPrevHash", _param0, _param1)
	ret0, _ := ret[0].(*PrevHashResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStorageInterfaceRecorder) GetPrevHash(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetPrevHash", arg0, arg1)
}

func (_m *MockStorageInterface) GetHistory(_param0 context.Context, _param1 *HistoryRequest) (*HistoryResponse, error) {
	ret := _m.ctrl.Call(_m, "GetHistory", _param0, _param1)
	ret0, _ := ret[0].(*HistoryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStorageInterfaceRecorder) GetHistory(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHistory", arg0, arg1)
}

func (_m *MockStorageInterface) GetStats(_param0 context.Context, _param1 *StatsRequest) (*StatsResponse, error) {
	ret := _m.ctrl.Call(_m, "GetStats", _param0, _param1)
	ret0, _ := ret[0].(*StatsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStorageInterfaceRecorder) GetStats(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetStats", arg0, arg1)
}

func (_m *MockStorageInterface) GetAccounts(_param0 context.Context, _param1 *AccountsRequest) (*AccountsResponse, error) {
	ret := _m.ctrl.Call(_m, "GetAccounts", _param0, _param1)
	ret0, _ := ret[0].(*AccountsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStorageInterfaceRecorder) GetAccounts(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAccounts", arg0, arg1)
}

func (_m *MockStorageInterface) GetAccountSettings(_param0 context.Context, _param1 *AccountSettingsRequest) (*AccountSettingsResponse, error) {
	ret := _m.ctrl.Call(_m, "GetAccountSettings", _param0, _param1)
	ret0, _ := ret[0].(*AccountSettingsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStorageInterfaceRecorder) GetAccountSettings(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAccountSettings", arg0, arg1)
}
