// Code generated by protoc-gen-gogo.
// source: pluto.proto
// DO NOT EDIT!

/*
Package pluto is a generated protocol buffer package.

It is generated from these files:
	pluto.proto

It has these top-level messages:
	ActualState
	ErrorResponse
	TransferOK
	Batch
	TransferRequest
	TransferResponse
	Limit
	Setting
	AccountSettingsRequest
	AccountSettingsResponse
	UpdateSettingsRequest
	UpdateSettingsResponse
	UpdateSettingsOK
	PrevHashRequest
	PrevHashResponse
	HistoryRequest
	HistoryResponse
	Txn
	StatsRequest
	StatsResponse
	AccountsRequest
	AccountsResponse
*/
package pluto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ErrorResponse_ErrorType int32

const (
	ErrorResponse_GENERAL ErrorResponse_ErrorType = 0
	ErrorResponse_BALANCE ErrorResponse_ErrorType = 1
	ErrorResponse_POLICY  ErrorResponse_ErrorType = 2
)

var ErrorResponse_ErrorType_name = map[int32]string{
	0: "GENERAL",
	1: "BALANCE",
	2: "POLICY",
}
var ErrorResponse_ErrorType_value = map[string]int32{
	"GENERAL": 0,
	"BALANCE": 1,
	"POLICY":  2,
}

func (x ErrorResponse_ErrorType) String() string {
	return proto.EnumName(ErrorResponse_ErrorType_name, int32(x))
}
func (ErrorResponse_ErrorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorPluto, []int{1, 0}
}

type HistoryRequest_Direction int32

const (
	HistoryRequest_BOTH   HistoryRequest_Direction = 0
	HistoryRequest_OUTPUT HistoryRequest_Direction = 1
	HistoryRequest_INPUT  HistoryRequest_Direction = 2
)

var HistoryRequest_Direction_name = map[int32]string{
	0: "BOTH",
	1: "OUTPUT",
	2: "INPUT",
}
var HistoryRequest_Direction_value = map[string]int32{
	"BOTH":   0,
	"OUTPUT": 1,
	"INPUT":  2,
}

func (x HistoryRequest_Direction) String() string {
	return proto.EnumName(HistoryRequest_Direction_name, int32(x))
}
func (HistoryRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorPluto, []int{15, 0}
}

type ActualState struct {
	Account      Account `protobuf:"varint,1,opt,name=account,proto3,customtype=Account" json:"account"`
	Balance      int64   `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	LastHash     Hash    `protobuf:"bytes,3,opt,name=last_hash,json=lastHash,proto3,customtype=Hash" json:"last_hash"`
	LastOpTimeNs int64   `protobuf:"varint,4,opt,name=last_op_time_ns,json=lastOpTimeNs,proto3" json:"last_op_time_ns,omitempty"`
	TraceId      string  `protobuf:"bytes,5,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (m *ActualState) Reset()                    { *m = ActualState{} }
func (m *ActualState) String() string            { return proto.CompactTextString(m) }
func (*ActualState) ProtoMessage()               {}
func (*ActualState) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{0} }

func (m *ActualState) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *ActualState) GetLastOpTimeNs() int64 {
	if m != nil {
		return m.LastOpTimeNs
	}
	return 0
}

func (m *ActualState) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type ErrorResponse struct {
	Error     string                  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorType ErrorResponse_ErrorType `protobuf:"varint,2,opt,name=error_type,json=errorType,proto3,enum=pluto.ErrorResponse_ErrorType" json:"error_type,omitempty"`
}

func (m *ErrorResponse) Reset()                    { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string            { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()               {}
func (*ErrorResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{1} }

func (m *ErrorResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ErrorResponse) GetErrorType() ErrorResponse_ErrorType {
	if m != nil {
		return m.ErrorType
	}
	return ErrorResponse_GENERAL
}

type TransferOK struct {
	SettingsId  int64 `protobuf:"varint,1,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	LastBatchId int64 `protobuf:"varint,2,opt,name=last_batch_id,json=lastBatchId,proto3" json:"last_batch_id,omitempty"`
}

func (m *TransferOK) Reset()                    { *m = TransferOK{} }
func (m *TransferOK) String() string            { return proto.CompactTextString(m) }
func (*TransferOK) ProtoMessage()               {}
func (*TransferOK) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{2} }

func (m *TransferOK) GetSettingsId() int64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

func (m *TransferOK) GetLastBatchId() int64 {
	if m != nil {
		return m.LastBatchId
	}
	return 0
}

type Batch struct {
	Receiver Account `protobuf:"varint,1,opt,name=receiver,proto3,customtype=Account" json:"receiver"`
	Amount   int64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *Batch) Reset()                    { *m = Batch{} }
func (m *Batch) String() string            { return proto.CompactTextString(m) }
func (*Batch) ProtoMessage()               {}
func (*Batch) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{3} }

func (m *Batch) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type TransferRequest struct {
	Sender     Account  `protobuf:"varint,1,opt,name=sender,proto3,customtype=Account" json:"sender"`
	CreatedAt  int64    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PrevHash   Hash     `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash,proto3,customtype=Hash" json:"prev_hash"`
	SettingsId int64    `protobuf:"varint,4,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	Batch      []*Batch `protobuf:"bytes,5,rep,name=batch" json:"batch,omitempty"`
	Sign       string   `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *TransferRequest) Reset()                    { *m = TransferRequest{} }
func (m *TransferRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()               {}
func (*TransferRequest) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{4} }

func (m *TransferRequest) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *TransferRequest) GetSettingsId() int64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

func (m *TransferRequest) GetBatch() []*Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

func (m *TransferRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type TransferResponse struct {
	State  *ActualState   `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Result *TransferOK    `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	Error  *ErrorResponse `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *TransferResponse) Reset()                    { *m = TransferResponse{} }
func (m *TransferResponse) String() string            { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()               {}
func (*TransferResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{5} }

func (m *TransferResponse) GetState() *ActualState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *TransferResponse) GetResult() *TransferOK {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *TransferResponse) GetError() *ErrorResponse {
	if m != nil {
		return m.Error
	}
	return nil
}

type Limit struct {
	Duration int64 `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Limit    int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (m *Limit) Reset()                    { *m = Limit{} }
func (m *Limit) String() string            { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()               {}
func (*Limit) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{6} }

func (m *Limit) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Limit) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Setting struct {
	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PrevHash Hash     `protobuf:"bytes,2,opt,name=prev_hash,json=prevHash,proto3,customtype=Hash" json:"prev_hash"`
	Limits   []*Limit `protobuf:"bytes,3,rep,name=limits" json:"limits,omitempty"`
}

func (m *Setting) Reset()                    { *m = Setting{} }
func (m *Setting) String() string            { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()               {}
func (*Setting) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{7} }

func (m *Setting) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Setting) GetLimits() []*Limit {
	if m != nil {
		return m.Limits
	}
	return nil
}

type AccountSettingsRequest struct {
	Account Account `protobuf:"varint,1,opt,name=account,proto3,customtype=Account" json:"account"`
}

func (m *AccountSettingsRequest) Reset()                    { *m = AccountSettingsRequest{} }
func (m *AccountSettingsRequest) String() string            { return proto.CompactTextString(m) }
func (*AccountSettingsRequest) ProtoMessage()               {}
func (*AccountSettingsRequest) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{8} }

type AccountSettingsResponse struct {
	State    *ActualState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Settings []*Setting   `protobuf:"bytes,2,rep,name=settings" json:"settings,omitempty"`
}

func (m *AccountSettingsResponse) Reset()                    { *m = AccountSettingsResponse{} }
func (m *AccountSettingsResponse) String() string            { return proto.CompactTextString(m) }
func (*AccountSettingsResponse) ProtoMessage()               {}
func (*AccountSettingsResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{9} }

func (m *AccountSettingsResponse) GetState() *ActualState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *AccountSettingsResponse) GetSettings() []*Setting {
	if m != nil {
		return m.Settings
	}
	return nil
}

type UpdateSettingsRequest struct {
	Account                 Account  `protobuf:"varint,1,opt,name=account,proto3,customtype=Account" json:"account"`
	PrevHash                Hash     `protobuf:"bytes,2,opt,name=prev_hash,json=prevHash,proto3,customtype=Hash" json:"prev_hash"`
	CreatedAt               int64    `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Limits                  []*Limit `protobuf:"bytes,4,rep,name=limits" json:"limits,omitempty"`
	VerifyTransferSign      bool     `protobuf:"varint,5,opt,name=verify_transfer_sign,json=verifyTransferSign,proto3" json:"verify_transfer_sign,omitempty"`
	VerifySettingChangeSign bool     `protobuf:"varint,6,opt,name=verify_setting_change_sign,json=verifySettingChangeSign,proto3" json:"verify_setting_change_sign,omitempty"`
	PublicKey               string   `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Sign                    string   `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *UpdateSettingsRequest) Reset()                    { *m = UpdateSettingsRequest{} }
func (m *UpdateSettingsRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSettingsRequest) ProtoMessage()               {}
func (*UpdateSettingsRequest) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{10} }

func (m *UpdateSettingsRequest) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UpdateSettingsRequest) GetLimits() []*Limit {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *UpdateSettingsRequest) GetVerifyTransferSign() bool {
	if m != nil {
		return m.VerifyTransferSign
	}
	return false
}

func (m *UpdateSettingsRequest) GetVerifySettingChangeSign() bool {
	if m != nil {
		return m.VerifySettingChangeSign
	}
	return false
}

func (m *UpdateSettingsRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *UpdateSettingsRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type UpdateSettingsResponse struct {
	State  *ActualState      `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Result *UpdateSettingsOK `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	Error  *ErrorResponse    `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *UpdateSettingsResponse) Reset()                    { *m = UpdateSettingsResponse{} }
func (m *UpdateSettingsResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateSettingsResponse) ProtoMessage()               {}
func (*UpdateSettingsResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{11} }

func (m *UpdateSettingsResponse) GetState() *ActualState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *UpdateSettingsResponse) GetResult() *UpdateSettingsOK {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *UpdateSettingsResponse) GetError() *ErrorResponse {
	if m != nil {
		return m.Error
	}
	return nil
}

type UpdateSettingsOK struct {
	LastSettingsId   int64 `protobuf:"varint,1,opt,name=last_settings_id,json=lastSettingsId,proto3" json:"last_settings_id,omitempty"`
	LastSettingsHash Hash  `protobuf:"bytes,2,opt,name=last_settings_hash,json=lastSettingsHash,proto3,customtype=Hash" json:"last_settings_hash"`
}

func (m *UpdateSettingsOK) Reset()                    { *m = UpdateSettingsOK{} }
func (m *UpdateSettingsOK) String() string            { return proto.CompactTextString(m) }
func (*UpdateSettingsOK) ProtoMessage()               {}
func (*UpdateSettingsOK) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{12} }

func (m *UpdateSettingsOK) GetLastSettingsId() int64 {
	if m != nil {
		return m.LastSettingsId
	}
	return 0
}

type PrevHashRequest struct {
	Account Account `protobuf:"varint,1,opt,name=account,proto3,customtype=Account" json:"account"`
}

func (m *PrevHashRequest) Reset()                    { *m = PrevHashRequest{} }
func (m *PrevHashRequest) String() string            { return proto.CompactTextString(m) }
func (*PrevHashRequest) ProtoMessage()               {}
func (*PrevHashRequest) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{13} }

type PrevHashResponse struct {
	State      *ActualState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	SettingsId int64        `protobuf:"varint,2,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
}

func (m *PrevHashResponse) Reset()                    { *m = PrevHashResponse{} }
func (m *PrevHashResponse) String() string            { return proto.CompactTextString(m) }
func (*PrevHashResponse) ProtoMessage()               {}
func (*PrevHashResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{14} }

func (m *PrevHashResponse) GetState() *ActualState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *PrevHashResponse) GetSettingsId() int64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

type HistoryRequest struct {
	Account   Account                  `protobuf:"varint,1,opt,name=account,proto3,customtype=Account" json:"account"`
	Direction HistoryRequest_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=pluto.HistoryRequest_Direction" json:"direction,omitempty"`
	PageSize  int32                    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *HistoryRequest) Reset()                    { *m = HistoryRequest{} }
func (m *HistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*HistoryRequest) ProtoMessage()               {}
func (*HistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{15} }

func (m *HistoryRequest) GetDirection() HistoryRequest_Direction {
	if m != nil {
		return m.Direction
	}
	return HistoryRequest_BOTH
}

func (m *HistoryRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *HistoryRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type HistoryResponse struct {
	State         *ActualState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Transactions  []*Txn       `protobuf:"bytes,2,rep,name=transactions" json:"transactions,omitempty"`
	NextPageToken string       `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *HistoryResponse) Reset()                    { *m = HistoryResponse{} }
func (m *HistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*HistoryResponse) ProtoMessage()               {}
func (*HistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{16} }

func (m *HistoryResponse) GetState() *ActualState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *HistoryResponse) GetTransactions() []*Txn {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *HistoryResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type Txn struct {
	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BatchId        int64   `protobuf:"varint,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Sender         int64   `protobuf:"varint,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver       int64   `protobuf:"varint,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount         int64   `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Balance        int64   `protobuf:"varint,6,opt,name=balance,proto3" json:"balance,omitempty"`
	PrevHash       Hash    `protobuf:"bytes,7,opt,name=prev_hash,json=prevHash,proto3,customtype=Hash" json:"prev_hash"`
	LastReceiverId int64   `protobuf:"varint,8,opt,name=last_receiver_id,json=lastReceiverId,proto3" json:"last_receiver_id,omitempty"`
	InputsHash     Hash    `protobuf:"bytes,9,opt,name=inputs_hash,json=inputsHash,proto3,customtype=Hash" json:"inputs_hash"`
	ConfirmedBy    Account `protobuf:"varint,10,opt,name=confirmed_by,json=confirmedBy,proto3,customtype=Account" json:"confirmed_by"`
	CreatedAt      int64   `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ProcessedAt    int64   `protobuf:"varint,12,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	Hash           Hash    `protobuf:"bytes,13,opt,name=hash,proto3,customtype=Hash" json:"hash"`
	SettingsId     int64   `protobuf:"varint,14,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	Sign           string  `protobuf:"bytes,15,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *Txn) Reset()                    { *m = Txn{} }
func (m *Txn) String() string            { return proto.CompactTextString(m) }
func (*Txn) ProtoMessage()               {}
func (*Txn) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{17} }

func (m *Txn) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Txn) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *Txn) GetSender() int64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *Txn) GetReceiver() int64 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

func (m *Txn) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Txn) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Txn) GetLastReceiverId() int64 {
	if m != nil {
		return m.LastReceiverId
	}
	return 0
}

func (m *Txn) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Txn) GetProcessedAt() int64 {
	if m != nil {
		return m.ProcessedAt
	}
	return 0
}

func (m *Txn) GetSettingsId() int64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

func (m *Txn) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type StatsRequest struct {
	Account Account `protobuf:"varint,1,opt,name=account,proto3,customtype=Account" json:"account"`
}

func (m *StatsRequest) Reset()                    { *m = StatsRequest{} }
func (m *StatsRequest) String() string            { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()               {}
func (*StatsRequest) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{18} }

type StatsResponse struct {
	State          *ActualState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	EmitterBalance int64        `protobuf:"varint,2,opt,name=emitter_balance,json=emitterBalance,proto3" json:"emitter_balance,omitempty"`
	Outputs        int64        `protobuf:"varint,3,opt,name=outputs,proto3" json:"outputs,omitempty"`
	Inputs         int64        `protobuf:"varint,4,opt,name=inputs,proto3" json:"inputs,omitempty"`
	Settings       int64        `protobuf:"varint,5,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (m *StatsResponse) Reset()                    { *m = StatsResponse{} }
func (m *StatsResponse) String() string            { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()               {}
func (*StatsResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{19} }

func (m *StatsResponse) GetState() *ActualState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *StatsResponse) GetEmitterBalance() int64 {
	if m != nil {
		return m.EmitterBalance
	}
	return 0
}

func (m *StatsResponse) GetOutputs() int64 {
	if m != nil {
		return m.Outputs
	}
	return 0
}

func (m *StatsResponse) GetInputs() int64 {
	if m != nil {
		return m.Inputs
	}
	return 0
}

func (m *StatsResponse) GetSettings() int64 {
	if m != nil {
		return m.Settings
	}
	return 0
}

type AccountsRequest struct {
	Account Account `protobuf:"varint,1,opt,name=account,proto3,customtype=Account" json:"account"`
}

func (m *AccountsRequest) Reset()                    { *m = AccountsRequest{} }
func (m *AccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*AccountsRequest) ProtoMessage()               {}
func (*AccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{20} }

type AccountsResponse struct {
	Accounts      []Account `protobuf:"varint,1,rep,packed,name=accounts,customtype=Account" json:"accounts,omitempty"`
	NextPageToken string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalTimeNs   int64     `protobuf:"varint,3,opt,name=total_time_ns,json=totalTimeNs,proto3" json:"total_time_ns,omitempty"`
	TraceId       string    `protobuf:"bytes,4,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (m *AccountsResponse) Reset()                    { *m = AccountsResponse{} }
func (m *AccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*AccountsResponse) ProtoMessage()               {}
func (*AccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptorPluto, []int{21} }

func (m *AccountsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *AccountsResponse) GetTotalTimeNs() int64 {
	if m != nil {
		return m.TotalTimeNs
	}
	return 0
}

func (m *AccountsResponse) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func init() {
	proto.RegisterType((*ActualState)(nil), "pluto.ActualState")
	proto.RegisterType((*ErrorResponse)(nil), "pluto.ErrorResponse")
	proto.RegisterType((*TransferOK)(nil), "pluto.TransferOK")
	proto.RegisterType((*Batch)(nil), "pluto.Batch")
	proto.RegisterType((*TransferRequest)(nil), "pluto.TransferRequest")
	proto.RegisterType((*TransferResponse)(nil), "pluto.TransferResponse")
	proto.RegisterType((*Limit)(nil), "pluto.Limit")
	proto.RegisterType((*Setting)(nil), "pluto.Setting")
	proto.RegisterType((*AccountSettingsRequest)(nil), "pluto.AccountSettingsRequest")
	proto.RegisterType((*AccountSettingsResponse)(nil), "pluto.AccountSettingsResponse")
	proto.RegisterType((*UpdateSettingsRequest)(nil), "pluto.UpdateSettingsRequest")
	proto.RegisterType((*UpdateSettingsResponse)(nil), "pluto.UpdateSettingsResponse")
	proto.RegisterType((*UpdateSettingsOK)(nil), "pluto.UpdateSettingsOK")
	proto.RegisterType((*PrevHashRequest)(nil), "pluto.PrevHashRequest")
	proto.RegisterType((*PrevHashResponse)(nil), "pluto.PrevHashResponse")
	proto.RegisterType((*HistoryRequest)(nil), "pluto.HistoryRequest")
	proto.RegisterType((*HistoryResponse)(nil), "pluto.HistoryResponse")
	proto.RegisterType((*Txn)(nil), "pluto.Txn")
	proto.RegisterType((*StatsRequest)(nil), "pluto.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "pluto.StatsResponse")
	proto.RegisterType((*AccountsRequest)(nil), "pluto.AccountsRequest")
	proto.RegisterType((*AccountsResponse)(nil), "pluto.AccountsResponse")
	proto.RegisterEnum("pluto.ErrorResponse_ErrorType", ErrorResponse_ErrorType_name, ErrorResponse_ErrorType_value)
	proto.RegisterEnum("pluto.HistoryRequest_Direction", HistoryRequest_Direction_name, HistoryRequest_Direction_value)
}

func init() { proto.RegisterFile("pluto.proto", fileDescriptorPluto) }

var fileDescriptorPluto = []byte{
	// 1378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0xcd, 0x6e, 0xe3, 0xd4,
	0x17, 0xaf, 0xf3, 0x69, 0x1f, 0xa7, 0x49, 0xfe, 0xf7, 0xdf, 0x69, 0x3d, 0x81, 0x4e, 0x8b, 0x05,
	0x4c, 0x67, 0x60, 0x3a, 0x10, 0x16, 0x68, 0x60, 0x46, 0x22, 0x29, 0x55, 0xa7, 0x9a, 0xaa, 0x2d,
	0x6e, 0xba, 0x60, 0x81, 0x2c, 0xc7, 0xbe, 0x4d, 0xcd, 0x24, 0xb6, 0xb1, 0x6f, 0x46, 0xcd, 0xbc,
	0x06, 0x0b, 0x36, 0x48, 0x48, 0x3c, 0x01, 0x6f, 0xc0, 0x96, 0x07, 0x60, 0x85, 0x60, 0x56, 0x48,
	0xbc, 0x06, 0xba, 0x5f, 0x4e, 0xec, 0xa4, 0x15, 0xcd, 0xee, 0x9e, 0x8f, 0x7b, 0x7c, 0xee, 0xef,
	0xfe, 0xce, 0x39, 0xd7, 0xa0, 0x47, 0xc3, 0x31, 0x09, 0x77, 0xa3, 0x38, 0x24, 0x21, 0x2a, 0x33,
	0xa1, 0xf5, 0x68, 0xe0, 0x93, 0xcb, 0x71, 0x7f, 0xd7, 0x0d, 0x47, 0x8f, 0x07, 0xe1, 0x20, 0x7c,
	0xcc, 0xac, 0xfd, 0xf1, 0x05, 0x93, 0x98, 0xc0, 0x56, 0x7c, 0x97, 0xf9, 0xab, 0x02, 0x7a, 0xc7,
	0x25, 0x63, 0x67, 0x78, 0x46, 0x1c, 0x82, 0xd1, 0x03, 0xa8, 0x3a, 0xae, 0x1b, 0x8e, 0x03, 0x62,
	0x28, 0xdb, 0xca, 0x4e, 0xb1, 0xdb, 0xf8, 0xed, 0xcd, 0xd6, 0xca, 0x1f, 0x6f, 0xb6, 0xaa, 0x1d,
	0xae, 0xb6, 0xa4, 0x1d, 0x19, 0x50, 0xed, 0x3b, 0x43, 0x27, 0x70, 0xb1, 0x51, 0xa0, 0xae, 0x96,
	0x14, 0xd1, 0x03, 0xd0, 0x86, 0x4e, 0x42, 0xec, 0x4b, 0x27, 0xb9, 0x34, 0x8a, 0xdb, 0xca, 0x8e,
	0xd6, 0xad, 0x89, 0x30, 0xa5, 0xe7, 0x4e, 0x72, 0x69, 0xa9, 0xd4, 0x4c, 0x57, 0xe8, 0x3d, 0x68,
	0x30, 0xd7, 0x30, 0xb2, 0x89, 0x3f, 0xc2, 0x76, 0x90, 0x18, 0x25, 0x16, 0xac, 0x46, 0xd5, 0x27,
	0x51, 0xcf, 0x1f, 0xe1, 0xe3, 0x04, 0xdd, 0x05, 0x95, 0xc4, 0x8e, 0x8b, 0x6d, 0xdf, 0x33, 0xca,
	0x34, 0xa0, 0x55, 0x65, 0xf2, 0xa1, 0x67, 0xfe, 0xa0, 0xc0, 0xea, 0x7e, 0x1c, 0x87, 0xb1, 0x85,
	0x93, 0x28, 0x0c, 0x12, 0x8c, 0xd6, 0xa0, 0x8c, 0xa9, 0x82, 0x9d, 0x40, 0xb3, 0xb8, 0x80, 0x9e,
	0x01, 0xb0, 0x85, 0x4d, 0x26, 0x11, 0xcf, 0xb8, 0xde, 0xbe, 0xb7, 0xcb, 0x11, 0xcc, 0xec, 0xe7,
	0x52, 0x6f, 0x12, 0x61, 0x4b, 0xc3, 0x72, 0x69, 0x7e, 0x0c, 0x5a, 0xaa, 0x47, 0x3a, 0x54, 0x0f,
	0xf6, 0x8f, 0xf7, 0xad, 0xce, 0x51, 0x73, 0x85, 0x0a, 0xdd, 0xce, 0x51, 0xe7, 0x78, 0x6f, 0xbf,
	0xa9, 0x20, 0x80, 0xca, 0xe9, 0xc9, 0xd1, 0xe1, 0xde, 0xd7, 0xcd, 0x82, 0xf9, 0x15, 0x40, 0x2f,
	0x76, 0x82, 0xe4, 0x02, 0xc7, 0x27, 0x2f, 0xd0, 0x16, 0xe8, 0x09, 0x26, 0xc4, 0x0f, 0x06, 0x09,
	0x3d, 0x05, 0x43, 0xd7, 0x02, 0xa9, 0x3a, 0xf4, 0x90, 0x09, 0xab, 0x0c, 0x8a, 0xbe, 0x43, 0xdc,
	0x4b, 0xea, 0xc2, 0x51, 0xd5, 0xa9, 0xb2, 0x4b, 0x75, 0x87, 0x9e, 0x79, 0x04, 0x65, 0xb6, 0x44,
	0x1f, 0x80, 0x1a, 0x63, 0x17, 0xfb, 0xaf, 0x70, 0x7c, 0xdd, 0x45, 0xa5, 0x0e, 0x68, 0x1d, 0x2a,
	0xce, 0x88, 0xdd, 0x29, 0x0f, 0x29, 0x24, 0xf3, 0x2f, 0x05, 0x1a, 0x32, 0x43, 0x0b, 0x7f, 0x37,
	0xc6, 0x09, 0x41, 0xf7, 0xa1, 0x92, 0xe0, 0xc0, 0xbb, 0x3e, 0xac, 0x30, 0xa3, 0x4d, 0x00, 0x37,
	0xc6, 0x0e, 0xc1, 0x9e, 0xed, 0xc8, 0xc0, 0x9a, 0xd0, 0x74, 0x08, 0xe5, 0x40, 0x14, 0xe3, 0x57,
	0x37, 0x70, 0x80, 0x9a, 0x19, 0x07, 0x72, 0xc8, 0x94, 0x16, 0x20, 0x53, 0x66, 0xa0, 0x18, 0xe5,
	0xed, 0xe2, 0x8e, 0xde, 0xae, 0x89, 0x5b, 0x63, 0x48, 0x58, 0xdc, 0x84, 0x10, 0x94, 0x12, 0x7f,
	0x10, 0x18, 0x15, 0x76, 0xe7, 0x6c, 0x6d, 0x7e, 0xaf, 0x40, 0x73, 0x7a, 0x3e, 0xc1, 0x8e, 0x1d,
	0x28, 0x27, 0x94, 0xea, 0xec, 0x7c, 0x7a, 0x1b, 0x89, 0x60, 0x33, 0x45, 0x60, 0x71, 0x07, 0xf4,
	0x00, 0x2a, 0x31, 0x4e, 0xc6, 0x43, 0x7e, 0x3a, 0xbd, 0xfd, 0x3f, 0xe1, 0x3a, 0xbd, 0x54, 0x4b,
	0x38, 0xa0, 0x87, 0x92, 0x72, 0x45, 0xe6, 0xb9, 0xb6, 0x88, 0x57, 0x82, 0x88, 0xe6, 0x13, 0x28,
	0x1f, 0xf9, 0x23, 0x9f, 0xa0, 0x16, 0xa8, 0xde, 0x38, 0x76, 0x88, 0x1f, 0x06, 0x82, 0x0e, 0xa9,
	0x4c, 0x39, 0x3c, 0xa4, 0x4e, 0x02, 0x58, 0x2e, 0x98, 0xdf, 0x42, 0xf5, 0x8c, 0xc3, 0x82, 0xea,
	0x50, 0x48, 0x59, 0x54, 0xf0, 0xbd, 0x2c, 0xde, 0x85, 0x1b, 0xf1, 0x7e, 0x17, 0x2a, 0x2c, 0x5c,
	0x62, 0x14, 0x33, 0x78, 0xb2, 0xac, 0x2c, 0x61, 0x33, 0xf7, 0x60, 0x5d, 0x5c, 0xb9, 0xf8, 0x64,
	0x22, 0x29, 0xf2, 0xdf, 0x7b, 0x84, 0x19, 0xc2, 0xc6, 0x5c, 0x90, 0x5b, 0xdf, 0xc3, 0x43, 0x50,
	0x25, 0x19, 0x8c, 0x02, 0xcb, 0xb8, 0x2e, 0x9c, 0x45, 0x50, 0x2b, 0xb5, 0x9b, 0xbf, 0x17, 0xe0,
	0xce, 0x79, 0xe4, 0x39, 0x04, 0x2f, 0x9f, 0xf5, 0x6d, 0xb0, 0xcc, 0x56, 0x41, 0x31, 0x5f, 0x05,
	0x53, 0xa8, 0x4b, 0xd7, 0x43, 0x8d, 0x3e, 0x82, 0xb5, 0x57, 0x38, 0xf6, 0x2f, 0x26, 0x36, 0x11,
	0xd4, 0xb2, 0x19, 0x97, 0x69, 0xa7, 0x53, 0x2d, 0xc4, 0x6d, 0x92, 0x75, 0x67, 0xfe, 0x20, 0x40,
	0x9f, 0x43, 0x4b, 0xec, 0x10, 0x27, 0xb7, 0xdd, 0x4b, 0x27, 0x18, 0x60, 0x3b, 0xad, 0x01, 0xd5,
	0xda, 0xe0, 0x1e, 0x02, 0x87, 0x3d, 0x66, 0x67, 0x9b, 0x37, 0x01, 0xa2, 0x71, 0x7f, 0xe8, 0xbb,
	0xf6, 0x4b, 0x3c, 0x31, 0xaa, 0xac, 0x60, 0x34, 0xae, 0x79, 0x81, 0x27, 0x69, 0x25, 0xa9, 0x33,
	0x95, 0xf4, 0x93, 0x02, 0xeb, 0x79, 0x58, 0x6f, 0x7d, 0x8f, 0x8f, 0x73, 0xf5, 0xb4, 0x21, 0x5c,
	0xb3, 0x81, 0x97, 0xac, 0xaa, 0x2b, 0x68, 0xe6, 0xe3, 0xa0, 0x1d, 0x68, 0xb2, 0x8e, 0x3a, 0xdf,
	0x77, 0xeb, 0x54, 0x7f, 0x36, 0xed, 0x30, 0x9f, 0x01, 0xca, 0x7a, 0x5e, 0x7b, 0xf5, 0xcd, 0xd9,
	0x9d, 0x54, 0x63, 0x3e, 0x85, 0xc6, 0xa9, 0xa0, 0xc3, 0x12, 0x15, 0xf2, 0x0d, 0x34, 0xa7, 0xbb,
	0x6f, 0x0d, 0x69, 0xae, 0x75, 0x16, 0xf2, 0xad, 0xd3, 0xfc, 0x5b, 0x81, 0xfa, 0x73, 0x3f, 0x21,
	0x61, 0x3c, 0x59, 0xa2, 0x10, 0x9e, 0x81, 0xe6, 0xf9, 0x31, 0x76, 0x59, 0x8b, 0xe2, 0x23, 0x73,
	0x4b, 0x24, 0x93, 0x0d, 0xba, 0xfb, 0xa5, 0x74, 0xb3, 0xa6, 0x3b, 0xd0, 0x5b, 0xa0, 0x45, 0x0e,
	0x23, 0xe5, 0x6b, 0xcc, 0xda, 0x7a, 0xd9, 0x52, 0xa9, 0xe2, 0xcc, 0x7f, 0x8d, 0x19, 0x0b, 0xa9,
	0x91, 0x84, 0x2f, 0x71, 0xc0, 0x27, 0x84, 0xc5, 0xdc, 0x7b, 0x54, 0x61, 0x7e, 0x08, 0x5a, 0x1a,
	0x13, 0xa9, 0x50, 0xea, 0x9e, 0xf4, 0x9e, 0x37, 0x57, 0xe8, 0x7c, 0x3d, 0x39, 0xef, 0x9d, 0x9e,
	0xf7, 0x9a, 0x0a, 0xd2, 0xa0, 0x7c, 0x78, 0x4c, 0x97, 0x05, 0xda, 0xe9, 0x1b, 0x69, 0x46, 0xb7,
	0x46, 0x71, 0x17, 0x6a, 0xac, 0xf0, 0x1c, 0xf6, 0x35, 0xd9, 0x64, 0x40, 0xb6, 0xfb, 0xab, 0xc0,
	0xca, 0xd8, 0xd1, 0xfb, 0xd0, 0x08, 0xf0, 0x15, 0xb1, 0xe7, 0xf2, 0x5f, 0xa5, 0xea, 0xd3, 0xf4,
	0x0c, 0xff, 0x14, 0xa1, 0xd8, 0xbb, 0x0a, 0xe6, 0x7a, 0xf5, 0x5d, 0x50, 0x73, 0x43, 0xbe, 0xda,
	0xe7, 0x03, 0x9e, 0x8e, 0x6a, 0x31, 0x7e, 0x79, 0x2f, 0x91, 0xd3, 0xb6, 0x35, 0x33, 0xef, 0xf9,
	0x80, 0x5c, 0x34, 0xde, 0xcb, 0xb3, 0xe3, 0x7d, 0xf6, 0x81, 0x56, 0x99, 0x7b, 0xa0, 0x4d, 0x1b,
	0x5c, 0xf5, 0xc6, 0x06, 0x27, 0x6b, 0x48, 0x7e, 0x8d, 0xe6, 0xac, 0x4e, 0x6b, 0xc8, 0x12, 0xea,
	0x43, 0x0f, 0x3d, 0x02, 0xdd, 0x0f, 0xa2, 0x31, 0x11, 0xc5, 0xa3, 0x2d, 0x08, 0x0b, 0xdc, 0x81,
	0x05, 0x6e, 0x43, 0xcd, 0x0d, 0x83, 0x0b, 0x3f, 0x1e, 0x61, 0xcf, 0xee, 0x4f, 0x0c, 0x58, 0xcc,
	0x45, 0x3d, 0x75, 0xea, 0x4e, 0x72, 0xdd, 0x56, 0xcf, 0x77, 0xdb, 0x77, 0xa0, 0x16, 0xc5, 0xa1,
	0x8b, 0x93, 0x84, 0x3b, 0xd4, 0xf8, 0x03, 0x2a, 0xd5, 0x75, 0x08, 0xda, 0x86, 0x12, 0xcb, 0x6e,
	0x75, 0x41, 0x76, 0xcc, 0x92, 0x2f, 0xa9, 0xfa, 0xdc, 0x6b, 0x44, 0xf6, 0xc7, 0xc6, 0x4c, 0x7f,
	0x7c, 0x02, 0x35, 0xca, 0xa8, 0x65, 0x46, 0xe4, 0x2f, 0x0a, 0xac, 0x8a, 0xbd, 0xb7, 0x26, 0xee,
	0x7d, 0x68, 0xe0, 0x91, 0x4f, 0x08, 0x8e, 0xed, 0xec, 0x53, 0xbc, 0x2e, 0xd4, 0x5d, 0x71, 0xe1,
	0x06, 0x54, 0xc3, 0x31, 0xa1, 0xd8, 0x0b, 0x5e, 0x49, 0x91, 0x92, 0x87, 0x5f, 0x8a, 0xa0, 0x95,
	0x90, 0x28, 0xe1, 0xd2, 0xa1, 0xcb, 0x69, 0x35, 0x1d, 0xb2, 0x4f, 0xa1, 0x21, 0x8e, 0xb1, 0xcc,
	0x81, 0x7f, 0x56, 0xa0, 0x39, 0xdd, 0x2e, 0xce, 0x7c, 0x1f, 0x54, 0x61, 0x4f, 0x0c, 0x65, 0xbb,
	0xb8, 0x53, 0xec, 0xea, 0x99, 0xb7, 0xac, 0x34, 0x2e, 0xaa, 0xbd, 0xc2, 0x82, 0xda, 0xa3, 0xaf,
	0x69, 0x12, 0x12, 0x67, 0x98, 0xfe, 0x56, 0xf0, 0x73, 0xeb, 0x4c, 0xb9, 0xe0, 0xaf, 0xa2, 0x94,
	0xf9, 0xab, 0x68, 0xff, 0xa8, 0x00, 0x9c, 0x72, 0xde, 0xd0, 0xd7, 0xd6, 0x33, 0x50, 0xe5, 0xfc,
	0x45, 0xeb, 0xb9, 0x67, 0xa0, 0x80, 0xa0, 0xb5, 0x31, 0xa7, 0xe7, 0x67, 0x33, 0x57, 0xd0, 0x09,
	0xd4, 0xb3, 0xc3, 0x09, 0xbd, 0xbd, 0x70, 0xf6, 0xc9, 0x50, 0x9b, 0xd7, 0x58, 0x65, 0xc0, 0xf6,
	0x9f, 0x05, 0xa8, 0x9e, 0x91, 0x30, 0x76, 0x06, 0x18, 0x7d, 0x01, 0xfa, 0x01, 0x26, 0x72, 0x88,
	0xa4, 0xe9, 0xe5, 0x66, 0x52, 0x9a, 0x5e, 0x7e, 0xda, 0x98, 0x2b, 0xf4, 0xd7, 0xe8, 0x00, 0x13,
	0xd1, 0x3f, 0xd1, 0x9d, 0x85, 0x1d, 0xbe, 0xb5, 0x9e, 0x57, 0xa7, 0xdb, 0x3f, 0x05, 0xf5, 0x00,
	0x13, 0xc6, 0x61, 0xf4, 0x7f, 0xf9, 0x32, 0x9b, 0xa9, 0x86, 0xd6, 0x5a, 0x56, 0x99, 0x6e, 0xe4,
	0x99, 0x4b, 0x2e, 0xa4, 0x99, 0xe7, 0xb8, 0x95, 0x66, 0x9e, 0x27, 0x8d, 0xb9, 0x82, 0xce, 0x01,
	0x4d, 0x23, 0xa4, 0xe0, 0x6e, 0x66, 0x37, 0xe4, 0xd1, 0xbd, 0x77, 0x9d, 0x59, 0x86, 0xed, 0x57,
	0xd8, 0xcf, 0xf1, 0x27, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x94, 0x18, 0xfe, 0x66, 0x61, 0x0f,
	0x00, 0x00,
}
